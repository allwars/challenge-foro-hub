
# Challenge Hub

**Challenge Hub** es una aplicación web para estudiantes de Alura donde pueden discutir sobre cursos, hacer preguntas y colaborar. Desarrollada con **Spring Boot**, **MySQL**, y **Flyway**, esta plataforma permite a los usuarios interactuar en un entorno seguro y organizado.

## Tecnologías Utilizadas

- **Java 17**
- **Spring Boot 3.x**
- **MySQL 8.x**
- **Flyway 9.x**
- **Spring Security**
- **JWT (JSON Web Tokens)**

## Instalación

### 1. Clona el Repositorio

```bash
git clone https://github.com/tu-usuario/challenge-hub.git
cd challenge-hub
2. Configura la Base de Datos
Crea una base de datos llamada aluraforum en MySQL:

sql
Copiar código
CREATE DATABASE aluraforum;
3. Configura application.properties
Edita src/main/resources/application.properties con tus credenciales de MySQL:

properties
Copiar código
spring.datasource.url=jdbc:mysql://localhost:3306/aluraforum?useSSL=false&serverTimezone=UTC
spring.datasource.username=tu-usuario
spring.datasource.password=tu-contraseña
4. Ejecuta la Aplicación
Puedes iniciar la aplicación con Maven:

bash
Copiar código
./mvnw spring-boot:run
Funcionalidades Principales
Autenticación: Login con JWT para acceso seguro.
Usuarios: Crear, listar y eliminar usuarios.
Cursos: Crear y listar cursos.
Tópicos: Crear, listar, actualizar y eliminar tópicos.
Respuestas: Crear y listar respuestas en tópicos.
Endpoints
POST /auth: Autenticación y obtención de token JWT.
POST /usuarios: Crear un nuevo usuario.
GET /usuarios: Listar todos los usuarios.
DELETE /usuarios/{id}: Eliminar un usuario por ID.
POST /cursos: Crear un nuevo curso.
GET /cursos: Listar todos los cursos.
POST /topicos: Crear un nuevo tópico.
GET /topicos: Listar todos los tópicos.
GET /topicos/{id}: Obtener un tópico por ID.
PUT /topicos/{id}: Actualizar un tópico por ID.
DELETE /topicos/{id}: Eliminar un tópico por ID.
POST /respostas: Crear una nueva respuesta.
GET /respostas: Listar todas las respuestas.
Ejemplo de Solicitud de Autenticación
http
Copiar código
POST /auth
Content-Type: application/json

{
  "email": "tu-email@example.com",
  "senha": "tu-contraseña"
}
Respuesta:

json
Copiar código
{
  "token": "tu-token-jwt"
}
Contribuciones
Para contribuir, sigue estos pasos:

Fork el repositorio.
Crea una nueva rama (git checkout -b feature/nueva-caracteristica).
Realiza tus cambios y haz un commit (git commit -am 'Añadida nueva característica').
Envía un pull request.

### Resumen de Archivos y Estructura del Proyecto

Aquí tienes un resumen de los archivos y directorios clave en tu proyecto para que los desarrolladores puedan ubicarlos fácilmente:

```plaintext
/src
|-- main
    |-- java
        |-- com
            |-- challengehub
                |-- challenge_hub
                    |-- config
                        |-- SecurityConfigurations.java
                    |-- controller
                        |-- AutenticacaoController.java
                        |-- CursoController.java
                        |-- TopicoController.java
                        |-- RespostaController.java
                    |-- dto
                        |-- TokenDto.java
                    |-- form
                        |-- LoginForm.java
                    |-- model
                        |-- Usuario.java
                        |-- Curso.java
                        |-- Topico.java
                        |-- Resposta.java
                    |-- repository
                        |-- UsuarioRepository.java
                        |-- CursoRepository.java
                        |-- TopicoRepository.java
                        |-- RespostaRepository.java
                    |-- service
                        |-- TokenService.java
                        |-- UsuarioService.java
                        |-- CursoService.java
                        |-- TopicoService.java
                        |-- RespostaService.java
    |-- resources
        |-- db
            |-- migration
                |-- V1__create_tables.sql
        |-- application.properties
